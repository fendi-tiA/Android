- var pageTitle = 'Fitur Android'

include presentation-header

include menu

article#presentation
	section		
		h2 Antarmuka
		hr
		ul
			li Penggunaan antarmuka pada Android didasarkan pada manipulasi langsung, menggunakan masukan sentuh yang serupa dengan tindakan di dunia nyata, misalnya menggesek (swiping), mengetuk (tapping), dan mencubit (pinching), untuk memanipulasi obyek di layar.
			li Masukan pengguna direspon dengan cepat dan juga tersedia antarmuka sentuh layaknya permukaan air, seringkali menggunakan kemampuan getaran perangkat untuk memberikan umpan balik haptik kepada pengguna.
			li Perangkat keras internal seperti akselerometer, giroskop, dan sensor proksimitas digunakan oleh beberapa aplikasi untuk merespon tindakan pengguna, misalnya untuk menyesuaikan posisi layar dari potret ke landscape, tergantung pada bagaimana perangkat diposisikan, atau memungkinkan pengguna untuk mengarahkan kendaraan saat bermain balapan dengan memutar perangkat sebagai simulasi kendali setir.

	section
		img(src="images/FiturAntarMuka.png")
		h1 Fitur Antarmuka
	
			
	section
		h2 Antarmuka
		hr
		ul
			li Ketika dihidupkan, perangkat Android akan memuat pada layar depan (homescreen), yakni navigasi utama dan pusat informasi pada perangkat, serupa dengan desktop pada komputer pribadi.
			li Layar depan Android biasanya terdiri dari ikon aplikasi dan widget; ikon aplikasi berfungsi untuk menjalankan aplikasi terkait, sedangkan widget menampilkan konten secara langsung dan terbarui otomatis, misalnya prakiraan cuaca, kotak masuk surel pengguna, atau menampilkan tiker berita secara langsung dari layar depan.
			li Beberapa aplikasi pihak ketiga yang tersedia di Google Play dan di toko aplikasi lainnya secara ekstensif mampu mengatur kembali tema layar depan Android, dan bahkan bisa meniru tampilan sistem operasi lain, misalnya Windows Phone.

	section
		h2 Antarmuka
		hr
		ul
			li Di bagian atas layar terdapat status bar, yang menampilkan informasi tentang perangkat dan konektivitasnya. Status bar ini bisa "ditarik" ke bawah untuk membuka layar notifikasi yang menampilkan informasi penting atau pembaruan aplikasi, misalnya surel diterima atau SMS masuk, dengan cara tidak mengganggu kegiatan pengguna pada perangkat.
			li Pada versi awal Android, layar notifikasi ini bisa digunakan untuk membuka aplikasi yang relevan, namun setelah diperbarui, fungsi ini semakin disempurnakan, misalnya kemampuan untuk memanggil kembali nomor telepon dari notifikasi panggilan tak terjawab tanpa harus membuka aplikasi utama.

	section
		h2 Aplikasi
		hr
		ul
			li Android memungkinkan penggunanya untuk memasang aplikasi pihak ketiga, baik yang diperoleh dari toko aplikasi seperti
				Google Play, Amazon Appstore, ataupun dengan mengunduh dan memasang berkas APK dari situs pihak ketiga.
			li Di Google Play, pengguna bisa menjelajah, mengunduh, dan memperbarui aplikasi yang diterbitkan oleh Google dan pengembang
				pihak ketiga, sesuai dengan persyaratan kompatibilitas Google.
	section
		ul
			li Google Play akan menyaring daftar aplikasi yang tersedia berdasarkan kompatibilitasnya dengan perangkat pengguna,
				dan pengembang dapat membatasi aplikasi ciptaan mereka bagi operator atau negara tertentu untuk alasan bisnis.
			li Pembelian aplikasi yang tidak sesuai dengan keinginan pengguna dapat dikembalikan dalam waktu 15 menit setelah pengunduhan.
			li Beberapa operator seluler juga menawarkan tagihan langsung untuk pembelian aplikasi di Google Play dengan cara menambahkan
				harga pembelian aplikasi pada tagihan bulanan pengguna.
			li Pada bulan September 2012, ada lebih dari 675.000 aplikasi yang tersedia untuk Android, dan perkiraan jumlah aplikasi yang diunduh
				dari Play Store adalah 25 miliar.

	section
		ul
			li Aplikasi Android dikembangkan dalam bahasa pemrograman Java dengan menggunakan kit pengembangan perangkat lunak Android (SDK).
			li SDK ini terdiri dari seperangkat perkakas pengembangan, termasuk debugger, perpustakaan perangkat lunak, emulator handset yang
				berbasis QEMU, dokumentasi, kode sampel, dan tutorial. Didukung secara resmi oleh lingkungan pengembangan terpadu (IDE) Eclipse,
				yang menggunakan plugin Android Development Tools (ADT).
			li Perkakas pengembangan lain yang tersedia di antaranya adalah Native Development Kit untuk aplikasi atau ekstensi dalam C atau C++,
				Google App Inventor, lingkungan visual untuk pemrogram pemula, dan berbagai kerangka kerja aplikasi web seluler lintas platform.


	section

		h2 Pengelolaan Memori
		hr
		ul
			li Karena perangkat Android umumnya bertenaga baterai, Android dirancang untuk mengelola memori (RAM) guna menjaga konsumsi daya minimal, 
			li berbeda dengan sistem operasi desktop yang bisa terhubung pada sumber daya listrik tak terbatas.
	section
		ul
			li Ketika sebuah aplikasi Android tidak lagi digunakan, sistem secara otomatis akan menangguhkannya (suspend) dalam memori secara teknis aplikasi tersebut masih "terbuka", namun dengan ditangguhkan, aplikasi tidak akan mengkonsumsi sumber daya (misalnya daya baterai atau daya pemrosesan), dan akan "diam" di latar belakang hingga aplikasi tersebut digunakan kembali. 
			li Cara ini memiliki manfaat ganda, tidak hanya meningkatkan respon perangkat Android karena aplikasi tidak perlu ditutup dan dibuka kembali dari awal setiap saat, tetapi juga memastikan bahwa aplikasi yang berjalan di latar belakang tidak menghabiskan daya secara sia-sia.
	section
		ul
			li Android mengelola aplikasi yang tersimpan di memori secara otomatis: ketika memori lemah, sistem akan menonaktifkan aplikasi dan proses yang tidak aktif untuk sementara waktu, 
			li aplikasi akan dinonaktifkan dalam urutan terbalik, dimulai dari yang terakhir digunakan. 
	section
		ul
			li Proses ini tidak terlihat oleh pengguna, jadi pengguna tidak perlu mengelola memori atau menonaktifkan aplikasi secara manual.
			li Namun, kebingungan pengguna atas pengelolaan memori pada Android telah menyebabkan munculnya beberapa aplikasi task killer pihak ketiga yang populer di Google Play.
include presentation-footer
include main-footer

